demo()
giorniArma <- c(74, 60, 66,71,51,66,76)
chisq.test(giorniArma, p = rep(1/7), 7) -> out
chisq.test(giorniArma, p = rep(1/7,7))
table(dati$algoritmo)
load("ricerca.RData")
load("./ricerca.RData")
load("./ricerca.RData")
getwd()
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
getwd()
list.files()  # Dovresti vedere "ricerca.RData"
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)
head(dati)  # Mostra le prime righe
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo)
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$algoritmo)
mean_A <- mean(dati$tempo[dati$algoritmo == "alg_A"])
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean_A <- mean(dati$tempo[dati$algoritmo == "alg_A"])
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"])
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95)
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
round(quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95),4) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
round(quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95),4) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
barplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
barplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
# IC 99% per alg_A
ic_A <- t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99)
# IC 99% per alg_B
ic_B <- t.test(dati$tempo[dati$algoritmo == "alg_B"], conf.level = 0.99)
# Visualizza gli IC
print(round(ic_A$conf.int, 4))  # Esempio: [10.2, 12.8]
print(round(ic_B$conf.int, 4))  # Esempio: [11.0, 13.5]
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99)
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99)
t.test(dati$tempo[dati$algoritmo == "alg_B"], conf.level = 0.99)
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
#Calcolo due intervalli di confidenza e li confronto.
t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99) #Specifica che l'intervallo di confidenza deve essere calcolato al 99%
round(t.test(dati$tempo[dati$algoritmo == "alg_B"], conf.level = 0.99),4)
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
#Calcolo due intervalli di confidenza e li confronto.
t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99) #Specifica che l'intervallo di confidenza deve essere calcolato al 99%
round(t.test(dati$tempo[dati$algoritmo == "alg_B"], conf.level = 0.99),4)
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
#Calcolo due intervalli di confidenza e li confronto.
t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99) #Specifica che l'intervallo di confidenza deve essere calcolato al 99%
round(t.test(dati$tempo[dati$algoritmo == "alg_B"], conf.level = 0.99),4)
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
#Calcolo due intervalli di confidenza e li confronto.
t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99) #Specifica che l'intervallo di confidenza deve essere calcolato al 99%
t.test(dati$tempo[dati$algoritmo == "alg_B"], conf.level = 0.99)
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
#Calcolo due intervalli di confidenza e li confronto.
t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99) #Specifica che l'intervallo di confidenza deve essere calcolato al 99%
t.test(dati$tempo[dati$algoritmo == "alg_B"], conf.level = 0.99)
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
#Calcolo due intervalli di confidenza e li confronto.
t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99) #Specifica che l'intervallo di confidenza deve essere calcolato al 99%
t.test(dati$tempo[dati$algoritmo == "alg_B"], conf.level = 0.99)
