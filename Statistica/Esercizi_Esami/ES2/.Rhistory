demo()
giorniArma <- c(74, 60, 66,71,51,66,76)
chisq.test(giorniArma, p = rep(1/7), 7) -> out
chisq.test(giorniArma, p = rep(1/7,7))
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
#Calcolo due intervalli di confidenza e li confronto.
t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99) #Specifica che l'intervallo di confidenza deve essere calcolato al 99%
t.test(dati$tempo[dati$algoritmo == "alg_B"], conf.level = 0.99)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
load("ricerca.RData")
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
load("ricerca.RData")
str(dati)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
load("ricerca.RData")
str(dati)
#head(dati)
tail(dati)
# Carica il dataset (assicurati di essere nella directory corretta)
load("ricerca.RData")
# Visualizza la struttura dei dati per capire cosa contiene
str(dati)   # Mostra struttura del dataset
head(dati)  # Mostra le prime righe
table(dati$algoritmo) #calcolo frequenza assoluta di una colonna, in questo caso il numero di volte in cui sono stati usati gli algoritmi
mean(dati$tempo[dati$algoritmo == "alg_A"]) #media dei valori di tempo, filtrati solo per l' algoritmo A
sd(dati$tempo[dati$algoritmo == "alg_A"])   #deviazione standard dei valori di tempo, filtrati solo per l' algoritmo A
quantile(dati$tempo[dati$algoritmo == "alg_A"], 0.95) #Il 5% dei tempi di risposta più lenti dell'algoritmo A. Questo valore è il 95° percentile della distribuzione
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
#Calcolo due intervalli di confidenza e li confronto.
t.test(dati$tempo[dati$algoritmo == "alg_A"], conf.level = 0.99) #Specifica che l'intervallo di confidenza deve essere calcolato al 99%
t.test(dati$tempo[dati$algoritmo == "alg_B"], conf.level = 0.99)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
load("ricerca.RData")
str(dati)
#head(dati)
tail(dati)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
load("ricerca.RData")
str(dati)
head(dati, 6)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
load("ricerca.RData")
str(dati)
head(dati, 10)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
load("ricerca.RData")
str(dati)
head(dati, 10)
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo[dati$algoritmo == 'alg_A'])
table(dati$algoritmo[dati$algoritmo == 'alg_B'])
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
load("ricerca.RData")
str(dati)
head(dati, 10)
prop.table(dati$algoritmo)
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
mean(dati$algoritmo[dati$algoritmo == 'alg_A'])
sd(dati$algoritmo[dati$algoritmo == 'alg_A'])
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
mean(dati$tempo[dati$algoritmo == 'alg_A'])
sd(dati$tempo[dati$algoritmo == 'alg_A'])
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
mean(dati$tempo[dati$algoritmo == 'alg_A'])
sd(dati$tempo[dati$algoritmo == 'alg_A'], digits = 4)
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
mean(dati$tempo[dati$algoritmo == 'alg_A'])
sd(dati$tempo[dati$algoritmo == 'alg_A'])
quantile(dati$tempo[dati$algoritmo == 'alg_A'],95)
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
mean(dati$tempo[dati$algoritmo == 'alg_A'])
sd(dati$tempo[dati$algoritmo == 'alg_A'])
quantile(dati$tempo[dati$algoritmo == 'alg_A'], 0.95)
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
mean(dati$tempo[dati$algoritmo == 'alg_A'])
sd(dati$tempo[dati$algoritmo == 'alg_A'])
quantile(dati$tempo[dati$algoritmo == 'alg_A'], 0.10)
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
mean(dati$tempo[dati$algoritmo == 'alg_A'])
sd(dati$tempo[dati$algoritmo == 'alg_A'])
quantile(dati$tempo[dati$algoritmo == 'alg_A'], 0.95)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
mean(dati$tempo[dati$algoritmo == 'alg_A'])
sd(dati$tempo[dati$algoritmo == 'alg_A'])
quantile(dati$tempo[dati$algoritmo == 'alg_A'], 0.95)
t.test(dati$tempo[dati$algoritmo == 'alg_A'], conf.level = 0.99)
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
mean(dati$tempo[dati$algoritmo == 'alg_A'])
sd(dati$tempo[dati$algoritmo == 'alg_A'])
quantile(dati$tempo[dati$algoritmo == 'alg_A'], 0.95)
t.test(dati$tempo[dati$algoritmo == 'alg_A'], conf.level = 0.99)
t.test(dati$tempo[dati$algoritmo == 'alg_B'], conf.level = 0.99)
load("ricerca.RData")
str(dati)
head(dati, 10)
table(dati$algoritmo)
mean(dati$tempo[dati$algoritmo == 'alg_A'])
sd(dati$tempo[dati$algoritmo == 'alg_A'])
quantile(dati$tempo[dati$algoritmo == 'alg_A'], 0.95)
t.test(dati$tempo[dati$algoritmo == 'alg_A'], 0.99)
load("ricerca.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
load("ricerca.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
load("ricerca.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
load("ricerca.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
table(dati$tempo) #calcolo
load("ricerca.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
table(dati$algoritmo) #calcolo
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES1")
load("ricerca.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
table(dati$algoritmo) #calcolo la frequenza per i valori distinti di una colonna
mean(dati$tempo[dati$algoritmo == 'alg_A'])   # calcolo la media dei tempi solo degli algoritmi di tipo A
sd(dati$tempo[dati$algoritmo == 'alg_A'])     # calcolo la deviazione standard dei tempi solo degli algoritmi di tipo A
quantile(dati$tempo[dati$algoritmo == 'alg_A'], 0.95) #calcolo il 5% degli algoritmi più lenti, ovvero il 95 percentile
#intervallo di confidenza per la stima delle medie dei vari algoritmi
t.test(dati$tempo[dati$algoritmo == 'alg_A'], conf.level = 0.99)
t.test(dati$tempo[dati$algoritmo == 'alg_B'], conf.level = 0.99)
# i valori degli intervalli si intrecciano, quindi è possibile che abbiano la stessa media
# grafico
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
load("ricerca.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
table(dati$algoritmo) #calcolo la frequenza per i valori distinti di una colonna
mean(dati$tempo[dati$algoritmo == 'alg_A'])   # calcolo la media dei tempi solo degli algoritmi di tipo A
sd(dati$tempo[dati$algoritmo == 'alg_A'])     # calcolo la deviazione standard dei tempi solo degli algoritmi di tipo A
quantile(dati$tempo[dati$algoritmo == 'alg_A'], 0.95) #calcolo il 5% degli algoritmi più lenti, ovvero il 95 percentile
#intervallo di confidenza per la stima delle medie dei vari algoritmi
t.test(dati$tempo[dati$algoritmo == 'alg_A'], conf.level = 0.99)
t.test(dati$tempo[dati$algoritmo == 'alg_B'], conf.level = 0.99)
# i valori degli intervalli si intrecciano, quindi è possibile che abbiano la stessa media
# grafico
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
# calculate mean response time obtained using the alg_A algorithm
mean_alg_A <- mean(dati$tempo[dati$algoritmo == 'alg_A'])
printf("La media dei tempi di risposta per l'algoritmo A è: %.2f ms\n", mean_alg_A)
load("ricerca.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
table(dati$algoritmo) #calcolo la frequenza per i valori distinti di una colonna
mean(dati$tempo[dati$algoritmo == 'alg_A'])   # calcolo la media dei tempi solo degli algoritmi di tipo A
sd(dati$tempo[dati$algoritmo == 'alg_A'])     # calcolo la deviazione standard dei tempi solo degli algoritmi di tipo A
quantile(dati$tempo[dati$algoritmo == 'alg_A'], 0.95) #calcolo il 5% degli algoritmi più lenti, ovvero il 95 percentile
#intervallo di confidenza per la stima delle medie dei vari algoritmi
t.test(dati$tempo[dati$algoritmo == 'alg_A'], conf.level = 0.99)
t.test(dati$tempo[dati$algoritmo == 'alg_B'], conf.level = 0.99)
# i valori degli intervalli si intrecciano, quindi è possibile che abbiano la stessa media
# grafico
boxplot(tempo ~ algoritmo,
data = dati,
main = "Confronto Tempi di Risposta: alg_A vs alg_B",
xlab = "Algoritmo",
ylab = "Tempo (ms)",
col = c("lightblue", "salmon"))
# calculate mean response time obtained using the alg_A algorithm
mean_alg_A <- mean(dati$tempo[dati$algoritmo == 'alg_A'])
print("La media dei tempi di risposta per l'algoritmo A è: %.2f ms\n", mean_alg_A)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("ricerca.RData") # carico il data-set
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("ricerca.RData") # carico il data-set
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("ricerca.RData") # carico il data-set
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RD") # carico il data-set
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
count(dati)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
sum(dati)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
names(dati)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrows(dati)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
mean(dati$trazione[dati$materiale == "B"])
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
nrow(dati$trazione[dati$materiale == "B"] >= 30)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
nrow(dati$trazione[dati$materiale == "B" && dati$materiale >= 30] )
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
nrow(dati$trazione[dati$materiale == "B" & dati$materiale >= 30])
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
nrow([dati$materiale == "B" & dati$materiale >= 30])
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
nrow(dati[dati$materiale == "B" & dati$materiale >= 30])
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
nrow(dati[dati$materiale == "B" & dati$trazione >= 30, ])
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
nrow(dati[dati$materiale == "B" & dati$trazione >= 30 ])
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
# conto quante righe hanno materiale B e trazione >= 30
# ci deve essere la virgola al fonto, perchè dati$trazione è un vettore numerico
nrow(dati[dati$materiale == "B" & dati$trazione >= 30, ])
quantile(dati$trazione[dati$materiale == "B"], 80)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
# conto quante righe hanno materiale B e trazione >= 30
# ci deve essere la virgola al fonto, perchè dati$trazione è un vettore numerico
nrow(dati[dati$materiale == "B" & dati$trazione >= 30, ])
quantile(dati$trazione[dati$materiale == "B"], 0.80)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
# conto quante righe hanno materiale B e trazione >= 30
# ci deve essere la virgola al fonto, perchè dati$trazione è un vettore numerico
nrow(dati[dati$materiale == "B" & dati$trazione >= 30, ])
quantile(dati$trazione[dati$materiale == "B"], 0.8)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
# conto quante righe hanno materiale B e trazione >= 30
# ci deve essere la virgola al fonto, perchè dati$trazione è un vettore numerico
sum(dati[dati$materiale == "B" & dati$trazione >= 30, ])
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
# conto quante righe hanno materiale B e trazione >= 30
# ci deve essere la virgola al fonto, perchè dati$trazione è un vettore numerico
sum(dati[dati$materiale == "B" & dati$trazione >= 30, ])
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
# conto quante righe hanno materiale B e trazione >= 30
# ci deve essere la virgola al fonto, perchè dati$trazione è un vettore numerico
nrow(dati[dati$materiale == "B" & dati$trazione >= 30, ])
quantile(dati$trazione[dati$materiale == "B"], 0.8)
sum(dati$trazione[dati$materiale == "B"] >= 30)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
# conto quante righe hanno materiale B e trazione >= 30
# ci deve essere la virgola al fonto, perchè dati$trazione è un vettore numerico
sum(dati$trazione[dati$materiale == "B"] >= 30)
# calcolo il 20% delle trazioni più alte per i materiali di tipo B
quantile(dati$trazione[dati$materiale == "B"], 0.8)
setwd("C:/Users/Davide/Desktop/Scuola/EserciziC_UNI/Statistica/Esercizi_Esami/ES2")
load("trazione.RData") # carico il data-set
str(dati)             # descrizione compatta delle colonne dei dati -> colonna algoritmo e tempo
head(dati)            # visualizzo le prime righe dei dati
nrow(dati)            # numero di osservazioni
# calcolo media e deviazione standard della trazione per i materiali di tipo B
mean(dati$trazione[dati$materiale == "B"])
sd(dati$trazione[dati$materiale == "B"])
# conto quante righe hanno materiale B e trazione >= 30
# ci deve essere la virgola al fonto, perchè dati$trazione è un vettore numerico
sum(dati$trazione[dati$materiale == "B"] >= 30)
# calcolo il 20% delle trazioni più alte per i materiali di tipo B
quantile(dati$trazione[dati$materiale == "B"], 0.8)
barplot(table(dati[,etichette[2]]), xlab = etichette[2], main = "A")
